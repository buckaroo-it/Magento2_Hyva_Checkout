<?php

declare(strict_types=1);
/** @var Escaper $escaper */
/** @var \Buckaroo\HyvaCheckout\Magewire\Checkout\Payment\Method\Applepay $magewire */

use Magento\Framework\Escaper;
?>
<form x-data="{
    config: {},
    canDisplay: false,
    loadSdk() {
            return new Promise(resolve => {
                const script = document.createElement('script');
                script.type = 'text/javascript';
                script.src = '<?= $magewire->getJsSdkUrl() ?>';
                script.async = true;
                script.onload = resolve;
                document.head.appendChild(script);
            })
    },

    formatTransactionResponse(response) {
        if (response === null || response === 'undefined') {
            return null;
        }

            const paymentData = response.token.paymentData;

            return JSON.stringify({
                paymentData: {
                version: paymentData.version,
                data: paymentData.data,
                signature: paymentData.signature,
                header: {
                    ephemeralPublicKey: paymentData.header.ephemeralPublicKey,
                    publicKeyHash: paymentData.header.publicKeyHash,
                    transactionId: paymentData.header.transactionId,
                },
                },
            });
    },

    async captureFunds(payment) {
        const billingContact = payment && payment.billingContact ? JSON.stringify(payment.billingContact) : ''
        await this.$wire.updateData(this.formatTransactionResponse(payment),billingContact);
        this.resolve();
        return {
            status: window.ApplePaySession.STATUS_SUCCESS,
            errors: [],
        };
    },

    async beginPayment() {
        const promise = new Promise((resolve) => {
            this.resolve = resolve;

            const config = new BuckarooApplePay.PayOptions(
                this.config.storeName,
                this.config.country,
                this.config.currency,
                this.config.cultureCode,
                this.config.guid,
                this.$wire.get('totals'),
                this.$wire.get('grandTotal'),
                'shipping',
                [],
                (payment) => this.captureFunds(payment),
                null,
                null,
                ['email', 'postalAddress'],
                ['email']
            );
            new BuckarooApplePay.PayPayment(config).beginPayment()
        })
        await promise;
    },

    async submit() {
        await hyvaCheckout.order.place();
    },
    getButtonClass() {
        return `pay-with-apple ${BuckarooApplePay.getButtonClass(this.config.buttonStyle, 'buy')}`;
    },
    async register() {
        this.config = this.$wire.get('config');
        this.loadSdk().then(async () => {
            this.canDisplay = await BuckarooApplePay.checkPaySupport();
            const v = async () => {
                if(this.canDisplay)
                    await this.beginPayment();
            };
            window.dispatchEvent(new CustomEvent('buckaroo-add-task', {
                detail: {
                    buckarooTask: v
                }
            }));
        });
    }
}" x-init="register()" novalidate>
    <template x-if="canDisplay">
        <button type="button" :class="getButtonClass()" @click="submit()">
            <?= $escaper->escapeHtml(__('Place Order')) ?>
        </button>
    </template>
</form>
